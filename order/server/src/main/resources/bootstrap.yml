spring:
  application:
    name: order
  # 统一配置文件管理 并不需要添加其他注解
  cloud:
    config:
      discovery:
        enabled: true
        service-id: CONFIG #应用名称
      profile: dev
  # 集成spring-cloud-stream-rabbit
    stream:
      binders:
        myrabbit: # 自定义binder
          type: rabbit
          environment:
            spring:
              rabbitmq:
                addresses: 127.0.0.1
                port: 5672
                username: guest
                password: guest
                virtual-host: /
      # MqReceiver 中的 key = "${rabbitmq.consumer.routing-key}" 会影响
      bindings:
        myInput:
          group: order
          destination: order-output #exchange
          content-type: application/json #messasge存储的格式
          default-binder: myrabbit

  # 链路追踪可视化 spring.zipkin.base-url
  #重点
  zipkin:
    #base-url:当你设置sleuth-cli收集信息后通过http传输到zinkin-server时，需要在这里配置
    base-url: http://127.0.0.1:9411
    sender:
      type: web
  sleuth:
    sampler:
      #收集追踪信息的比率，如果是0.1则表示只记录10%的追踪数据，如果要全部追踪，设置为1（实际场景不推荐，因为会造成不小的性能消耗）
      probability: 1

# eureka 必须单独提取出来（启动在8761默认端口就不用）
eureka:
  client:
    service-url:
      defaultZone: http://localhost:4321/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
    prefer-ip-address: true
# 消息队列中的 消费消息
rabbitmq:
  consumer:
    queue: order-queue
    exchange: order-exchange
    routing-key: order.#
# 可视化 默认是applicationName

# 更改日志级别 方便链路追踪
logging:
  level:
    org.springframework.cloud.openfeign: debug
